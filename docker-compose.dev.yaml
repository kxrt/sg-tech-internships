services:
  # service to get intership data
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - "./backend:/go/src/backend"
      - ./service-account-key.json:/service-account-key.json
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      GITHUB_API_URL: ${GITHUB_API_URL}
      GITHUB_API_TOKEN: ${GITHUB_API_TOKEN}
      GOOGLE_APPLICATION_CREDENTIALS: /service-account-key.json
    depends_on:
      - postgres

  # frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - "./frontend/src:/frontend/src"
    ports:
      - "8080:5173"
    environment:
      VITE_GA_TRACKING_ID: ${VITE_GA_TRACKING_ID}
      VITE_FIREBASE_API_KEY: ${VITE_FIREBASE_API_KEY}
      VITE_FIREBASE_AUTH_DOMAIN: ${VITE_FIREBASE_AUTH_DOMAIN}
      VITE_FIREBASE_PROJECT_ID: ${VITE_FIREBASE_PROJECT_ID}
      VITE_FIREBASE_STORAGE_BUCKET: ${VITE_FIREBASE_STORAGE_BUCKET}
      VITE_FIREBASE_MESSAGING_SENDER_ID: ${VITE_FIREBASE_MESSAGING_SENDER_ID}
      VITE_FIREBASE_APP_ID: ${VITE_FIREBASE_APP_ID}
      VITE_FIREBASE_MEASUREMENT_ID: ${VITE_FIREBASE_MEASUREMENT_ID}
    depends_on:
      - backend

  # postgres service for backend
  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - pg-data:/var/lib/postgresql/data
volumes:
  pg-data:
